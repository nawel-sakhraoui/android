import { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';
import { NativeScriptModule } from 'nativescript-angular/nativescript.module';
import { AppRoutingModule } from './app-routing.module.tns';
import { AppComponent } from './app.component';
import { AutoGeneratedComponent } from './auto-generated/auto-generated.component';


// Uncomment and add to NgModule imports if you need to use two-way binding
// import { NativeScriptFormsModule } from 'nativescript-angular/forms';

// Uncomment and add to NgModule imports  if you need to use the HTTP wrapper
import { NativeScriptHttpClientModule } from 'nativescript-angular/http-client';
//import { HomeComponent } from './home/home.component';
import { HomeComponent } from './home/home.component';
import { LoginComponent } from './login/index';
import { SigninComponent } from './signin/index';
import { RegistrationDetailsComponent } from './registration-details/registration-details.component';
import { StoreComponent } from './store/index';
import { ProfileComponent } from './profile/profile.component';
import { MenuComponent } from './menu/menu.component';
import { CartComponent } from './cart/cart.component';
import { MyHomeComponent } from './my-home/my-home.component';
import { SearchComponent } from './search/search.component';
import { CreatestoreComponent } from './createstore/createstore.component';
import { ArticleComponent } from './article/article.component';
import { ModalComponent } from './article/modal.component';
import { RatingModalComponent } from './ongoing/rating-modal.component';
import { StopModalComponent } from   './ongoing/stop-modal.component';
import { StopModal2Component } from   './purchase-command/stop-modal2.component';
import { WizardComponent } from './wizard/wizard.component';
import { WizardStepComponent } from './wizard/wizard-step.component';
import { NewarticleComponent } from './newarticle/newarticle.component';
import { UploadImgComponent } from './upload-img/upload-img.component';
import { UpArticleComponent } from './up-article/up-article.component';
import { UpdateStoreComponent } from './update-store/update-store.component';
import { SoldoutComponent } from './soldout/soldout.component';
import { StoresMenuComponent } from './stores-menu/stores-menu.component';
import { MainComponent } from './main/main.component';
import { BuynowComponent } from './buynow/buynow.component';
import { OngoingComponent } from './ongoing/ongoing.component';
import { SalesComponent } from './sales/sales.component';
import { UserValidationComponent } from './user-validation/user-validation.component';
import { ListMessagesComponent } from './list-messages/list-messages.component';
import { MessageComponent } from './message/message.component';
import { StoreDetailsComponent } from './store-details/store-details.component';
import { DoneComponent } from './done/done.component';
import { HistoricSalesComponent } from './historic-sales/historic-sales.component';
import { SaleCommandComponent } from './sale-command/sale-command.component';
import { PurchaseCommandComponent } from './purchase-command/purchase-command.component'; // <-- import the module
import { LoginAccountKitComponent } from './login-account-kit/login-account-kit.component';
import { ResultComponent } from './result/result.component';
import { UsersManagerComponent } from './users-manager/users-manager.component';

import { AdressComponent } from './adress/adress.component';
//import { DeliveryComponent } from './delivery/delivery.component';
import { DeliveryListComponent } from './delivery-list/delivery-list.component';
import { DashbordComponent } from './dashbord/dashbord.component';

import { EqualValidatorDirective } from './directives/equal-validator.directive';
import { ExistEmailValidatorDirective } from './directives/exist-email-validator.directive';


import { RatingModal2Component } from './purchase-command/rating-modal2.component';
import { StoresManagerComponent } from './stores-manager/stores-manager.component';
import { MonthIncomeComponent } from './month-income/month-income.component';
import { DeliveryComponent } from './delivery/delivery.component';
import { DeliveryDoneComponent } from './delivery-done/delivery-done.component';
import { WeeklyIncomeComponent } from './weekly-income/weekly-income.component';
import { DeliveryIncomeComponent } from './delivery-income/delivery-income.component';
import { ContactUsComponent } from './contact-us/contact-us.component';
import { ContactUsManagerComponent } from './contact-us-manager/contact-us-manager.component';
//import { DeliveryComponent } from './delivery/delivery.component';


@NgModule({
  
  imports: [ 
    NativeScriptModule,
   AppRoutingModule,
  ],

  declarations: [
  
  AppComponent,
  HomeComponent,
  SigninComponent,
  EqualValidatorDirective,
  RegistrationDetailsComponent,
  LoginComponent,
  ExistEmailValidatorDirective,
  StoreComponent,
  ProfileComponent,
  MenuComponent,
  CartComponent,
  MyHomeComponent,
  SearchComponent,
  CreatestoreComponent,
  ArticleComponent,
  NewarticleComponent,
  UploadImgComponent,
  UpArticleComponent,
  UpdateStoreComponent,
  SoldoutComponent,
  StoresMenuComponent,
  MainComponent,
  ModalComponent,
  BuynowComponent,
  OngoingComponent,
  SalesComponent,
  UserValidationComponent,
  WizardStepComponent,
  WizardComponent,
  ListMessagesComponent,
  MessageComponent,
  RatingModalComponent,
  StopModalComponent, 
   StopModal2Component, 
  StoreDetailsComponent,
  DoneComponent,
  HistoricSalesComponent,
  SaleCommandComponent,
  PurchaseCommandComponent,
  LoginAccountKitComponent,
   RatingModal2Component,
   ResultComponent,
   UsersManagerComponent,
   AdressComponent,
  // DeliveryComponent,
   DeliveryListComponent,
  AutoGeneratedComponent,
  DashbordComponent,
 //  NewDeliveryComponent

  AutoGeneratedComponent,
   // HomeComponent,
    EqualValidatorDirective,
   StoresManagerComponent,
   MonthIncomeComponent,
   DeliveryComponent,
   DeliveryDoneComponent,
   WeeklyIncomeComponent,
   DeliveryIncomeComponent,
   ContactUsComponent,
   ContactUsManagerComponent,

  ],
  
  providers: [],
  bootstrap: [AppComponent],
   schemas: [NO_ERRORS_SCHEMA]
})
export class AppModule { }
